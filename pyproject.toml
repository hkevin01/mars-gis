[build-system]
requires = ["setuptools>=45", "wheel", "setuptools-scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "mars-gis"
dynamic = ["version"]
description = "Mars Geospatial Intelligence System"
readme = "README.md"
license = { text = "MIT" }
authors = [{ name = "Kevin Hildebrand", email = "kevin.hildebrand@gmail.com" }]
keywords = ["mars", "gis", "geospatial", "nasa", "ai", "machine-learning"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: GIS",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
requires-python = ">=3.8"
dependencies = [
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "pydantic>=2.0.0",
    "sqlalchemy>=2.0.0",
    "psycopg2-binary>=2.9.0",
    "geoalchemy2>=0.14.0",
    "geopandas>=0.14.0",
    "rasterio>=1.3.0",
    "gdal>=3.4.0",
    "pyproj>=3.4.0",
    "shapely>=2.0.0",
    "fiona>=1.8.0",
    "pandas>=2.0.0",
    "numpy>=1.21.0",
    "scipy>=1.9.0",
    "scikit-learn>=1.3.0",
    "torch>=2.0.0",
    "torchvision>=0.15.0",
    "xarray>=2023.1.0",
    "netcdf4>=1.6.0",
    "h5py>=3.8.0",
    "redis>=4.5.0",
    "celery>=5.3.0",
    "requests>=2.28.0",
    "aiohttp>=3.8.0",
    "pillow>=10.0.0",
    "matplotlib>=3.6.0",
    "plotly>=5.17.0",
    "folium>=0.15.0",
    "streamlit>=1.28.0",
    "python-multipart>=0.0.6",
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.9.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.6.0",
    "pre-commit>=3.4.0",
]
docs = ["sphinx>=7.1.0", "sphinx-rtd-theme>=1.3.0", "myst-parser>=2.0.0"]
ml = ["wandb>=0.15.0", "mlflow>=2.7.0", "optuna>=3.4.0", "tensorboard>=2.14.0"]

[project.urls]
Homepage = "https://github.com/yourusername/mars-gis"
Documentation = "https://mars-gis.readthedocs.io/"
Repository = "https://github.com/yourusername/mars-gis.git"
"Bug Tracker" = "https://github.com/yourusername/mars-gis/issues"

[project.scripts]
mars-gis = "mars_gis.cli:main"

[tool.setuptools_scm]
write_to = "src/mars_gis/_version.py"

[tool.setuptools.packages.find]
where = ["src"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["mars_gis"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = ["geopandas.*", "rasterio.*", "gdal.*", "osr.*", "ogr.*"]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=src/mars_gis",
    "--cov-report=html",
    "--cov-report=term-missing",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]
