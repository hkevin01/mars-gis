# Production Environment Configuration
version: "3.8"

services:
  backend:
    environment:
      - NODE_ENV=production
      - OPTIMIZE_FOR_PRODUCTION=true
      - ENABLE_LOGGING=true
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
      resources:
        limits:
          cpus: "1.0"
          memory: 1G
        reservations:
          cpus: "0.5"
          memory: 512M

  frontend:
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
      resources:
        limits:
          cpus: "0.5"
          memory: 512M
        reservations:
          cpus: "0.25"
          memory: 256M

  # Load Balancer (Nginx)
  nginx:
    image: nginx:alpine
    container_name: mars-gis-nginx
    ports:
      - "443:443"
    volumes:
      - ../../nginx/nginx.conf:/etc/nginx/nginx.conf
      - ../../nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - mars-network
    restart: unless-stopped

  # Backup Service
  backup:
    image: postgres:15-alpine
    container_name: mars-gis-backup
    environment:
      - PGPASSWORD=mars_password
    volumes:
      - ../../backups:/backups
    command: |
      sh -c "
      while true; do
        pg_dump -h database -U mars_user -d mars_gis > /backups/backup_$$(date +%Y%m%d_%H%M%S).sql
        find /backups -name '*.sql' -mtime +7 -delete
        sleep 86400
      done"
    depends_on:
      - database
    networks:
      - mars-network
    restart: unless-stopped
